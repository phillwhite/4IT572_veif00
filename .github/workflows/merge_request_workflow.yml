name: Merge request workflow

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged

  Install:
    needs: if_merged
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors
      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    #needs: [Build, Test]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: Install Ansible and AWS SDKs
        run: pip3 install ansible boto boto3

      - name: Run playbook
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: ec2_deploy.yml
          # Optional, directory where playbooks live
          directory: ./.github/ansible/
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, SSH known hosts file content
          known_hosts: |
            ec2-174-129-91-100.compute-1.amazonaws.com ssh-ed25519 ${{ secrets.SSH_PRIVATE_KEY }}
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}



